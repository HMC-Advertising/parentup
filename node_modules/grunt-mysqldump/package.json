{
  "name": "grunt-mysqldump",
  "description": "A MYSQL database dump grunt task.",
  "version": "0.0.2",
  "homepage": "https://github.com/tomshaw/grunt-mysqldump",
  "author": {
    "name": "Tom Shaw",
    "email": "tom@urlrider.com",
    "url": "http://urlrider.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:tomshaw/grunt-mysqldump.git"
  },
  "bugs": {
    "url": "https://github.com/tomshaw/grunt-mysqldump/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tomshaw/grunt-mysqldump/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "shelljs": "~0.1.4",
    "archiver": "latest",
    "each-async": "^0.1.1",
    "bytes": "latest"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "mysql",
    "database"
  ],
  "readme": "# grunt-mysqldump\r\n\r\n> Grunt plugin for dumping and archiving MySQL databases. Supports exporting and archiving multiple databases in a single operation. Runs asynchronously and extremely fast. Outputs export and compression information as each operation completes.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-mysqldump --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-mysqldump');\r\n```\r\n\r\n## The \"mysqldump\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `mysqldump` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ndb: grunt.file.readJSON('config/database.json'),    \r\nmysqldump: {\r\n  dist: {\r\n    user: '<%= db.local.user %>',\r\n    pass: '<%= db.local.pass %>',\r\n    host: '<%= db.local.host %>',\r\n    port: '<%= db.local.port %>',\r\n    dest: 'backup/',\r\n    options: {\r\n      compress: 'gzip'\r\n    },\r\n    databases: [\r\n      'my_forum',\r\n      'my_blog',\r\n      'employees',\r\n      'sakila'\r\n    ],\r\n  },\r\n},\r\n```\r\n\r\nAn example of multiple targets. To execute specific targets simply register a task and specify them.\r\n\r\n```js\r\ndb: grunt.file.readJSON('config/database.json'),    \r\nmysqldump: {\r\n  main: {\r\n    user: '<%= db.local.user %>',\r\n    pass: '<%= db.local.pass %>',\r\n    host: '<%= db.local.host %>',\r\n    port: '<%= db.local.port %>',\r\n    dest: 'backup/',\r\n    options: {\r\n      compress: false\r\n    },\r\n    databases: [\r\n      'my_forum'\r\n    ],\r\n  },\r\n  stuff: {\r\n    user: '<%= db.local.user %>',\r\n    pass: '<%= db.local.pass %>',\r\n    host: '<%= db.local.host %>',\r\n    port: '<%= db.local.port %>',\r\n    dest: 'backup/',\r\n    options: {\r\n      compress: true,\r\n      algorithm: 'zip',\r\n      level: 5,\r\n      both: true\r\n    },\r\n    databases: [\r\n      'my_forum',\r\n      'my_blog',\r\n      'employees',\r\n      'sakila'\r\n    ],\r\n  },\r\n},\r\n```\r\n\r\n### Options\r\n\r\n#### compress\r\n\r\nType: `Boolean`\r\n\r\nDefault: `false`\r\n\r\nRequired: `false`\r\n\r\nSet to false for no compression. Will only perform a mysqldump of the target database files.\r\n\r\n#### algorithm\r\n\r\nType: `String`\r\n\r\nDefault: `zip`\r\n\r\nRequired: `false`\r\n\r\nCurretly supports `gzip`, `deflate`, `deflateRaw`, `tar`, `tgz` and `zip`.\r\n\r\n#### level\r\n\r\nType: `Integer`\r\n\r\nDefault: `1`\r\n\r\nRequired: `false`\r\n\r\nSets the level of archive compression.\r\n\r\n#### both\r\n\r\nType: `Boolean`\r\n\r\nDefault: `false`\r\n\r\nRequired: `false`\r\n\r\nYou have the option of saving both the sql dump file and the compressed file. Only relevant when archiving.\r\n\r\n### Running \r\nTo run all tasks type `grunt mysqldump` \r\n\r\n#### Running Specific Tasks\r\n\r\nTo target specific tasks register them at the bottom of the data object.\r\n\r\n```\r\ngrunt.registerTask('backup', ['mysqldump:stuff']);\r\n```\r\n\r\n#### Running Verbose Mode \r\nSpecify the verbose mode parameter to log extra debugging information.\r\n\r\n```shell\r\ngrunt mysqldump:all --verbose\r\n```\r\n\r\n### Awesome Libraries Used\r\n\r\n+ [shelljs](https://github.com/arturadib/shelljs) - Portable Unix shell commands for Node.js.\r\n+ [node-archiver](https://github.com/ctalkington/node-archiver) - A streaming interface for archive generation.\r\n+ [each-async](https://github.com/sindresorhus/each-async) - Async concurrent iterator (async forEach).\r\n+ [bytes.js](https://github.com/visionmedia/bytes.js) - Node byte string parser.\r\n\r\n### Todo\r\n\r\n- Replace shelljs with child_process.spawn\r\n- Add some tests.\r\n\r\n### If you want to be awesome.\r\n\r\n- Fork the project and contribute add tests!\r\n\r\n### Questions?\r\n\r\n- Email: [tom@urlrider.com](mailto:tom@urlrider.com) \r\n\r\n### Release History\r\n * 2014-06-17    v0.0.2    Version bump.\r\n * 2014-06-17    v0.0.1    Initial commit.\r\n\r\n### License\r\n\r\n### (The MIT License)\r\n\r\nCopyright © 2014 [tom@urlrider.com](mailto:tom@urlrider.com) \r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‘Software’), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED ‘AS IS’, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-mysqldump@0.0.2",
  "dist": {
    "shasum": "c4c13431689837c375881bff3b4c435ad1c794d5"
  },
  "_from": "grunt-mysqldump@",
  "_resolved": "https://registry.npmjs.org/grunt-mysqldump/-/grunt-mysqldump-0.0.2.tgz"
}
